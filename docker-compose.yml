version: '3'
services:

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    depends_on:
      - "zookeeper"
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "lombardia:1:1,sicilia:1:1,toscana:1:1,positive:1:1,healed:1:1"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  spark-master:
    image: bde2020/spark-master:2.4.1-hadoop2.7
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark

  spark-worker-1:
    image: bde2020/spark-worker:2.4.1-hadoop2.7
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"

  producer-lombardia:
    build: 
      context: producers/contact-producer
    container_name: producer-lombardia
    depends_on:
      - "kafka"
    environment:
      - REGION=lombardia

  producer-sicilia:
    build:
      context: producers/contact-producer
    container_name: producer-sicilia
    depends_on:
      - "kafka"
    environment:
      - REGION=sicilia

  producer-toscana:
    build:
      context: producers/contact-producer
    container_name: producer-toscana
    depends_on:
      - "kafka"
    environment:
      - REGION=toscana

  producer-positive:
    build:
      context: producers/positive-producer
    container_name: producer-positive
    depends_on:
      - "kafka"
      - "influx"

  producer-healed:
    build:
      context: producers/healed-producer
    container_name: producer-healed
    depends_on:
      - "kafka"
      - "influx"

  influx:
    image: influxdb
    container_name: influx_db
    ports:
      - "8083:8083"
      - "8086:8086"
    environment:
      - INFLUXDB_USER=user
      - INFLUXDB_PASS=pass
      - INFLUXDB_DB=covid

  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_NAME: Main Org.
      GF_AUTH_ANONYMOUS_ORG_ROLE: Editor
      GF_INSTALL_PLUGINS: grafana-worldmap-panel, grafana-piechart-panel
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    ports:
      - "3000:3000"
    depends_on:
      - influx


  